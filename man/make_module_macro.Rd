% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_module_macro.R
\name{make_module_macro}
\alias{make_module_macro}
\title{Generate extendr module macro for Rust source}
\usage{
make_module_macro(code, module_name = "rextendr")
}
\arguments{
\item{code}{Character vector containing Rust code.}

\item{module_name}{Module name}
}
\value{
Character vector holding the contents of the generated macro statement.
}
\description{
Read some Rust source code, find functions or implementations with the
\verb{#[extendr]} attribute, and generate an \verb{extendr_module!} macro statement.
}
\details{
This function uses simple regular expressions to do the Rust parsing and
can get confused by valid Rust code. It is only meant as a convenience for
simple use cases. In particular, it cannot currently handle implementations
for generics.
}
\keyword{internal}
